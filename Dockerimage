pipeline {
	agent any
	stages {
		stage('Build') 	{
				steps 	{
					echo 'Running build automation'
					sh './gradlew build --no-daemon'
					archiveArtifacts artifacts: 'dist/trainSchedule.zip'
					}
				}
		stage('Build Docker Image'){
			when	{
				branch 'master'
				}
			steps 	{
				script	{
					app = docker.build("<docker_login_id>/node-app")
					app.inside{
					sh 'echo $(curl localhost:8080)'
					}
				}
				}
				}
		stage('Push Docker Image'){
			when	{
				branch'master'
				}
				steps	{
					script	{
						docker.withRegistry('https://registry.hub.docker.com','docker_hub)login'){
						app.push("${env.BUILD_NUMBER}")
						app.push("latest")
						}
					}
				}
			}


ps -ex
netstat -ntpl
ps -ef
top
systemctl disable jenkins
systemctl disable sonar
systemctl disable artifactory
systemctl stop jenkins
systemctl stop artifactory
systemctl stop sonar
ps -ef
netstat -tnlp
telnet localhost 8080
yum install telnet
telnet localhost 8080
systemctl docker resetart
systemctl restart docker
ps -ef
netstat -tnpl
curl ident.me

